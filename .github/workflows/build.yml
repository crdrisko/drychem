name: build

on: [push]

env:
  BUILD_TYPE: Release

jobs:
  windows-builds:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"

    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -Dchem_build_all=ON -Dutils_enable_networking=ON -Dutils_exclude_scripts=ON # -Dutils_install_applications=ON

      - name: Build
        run: cmake --build .

      - name: Install
        run: cmake --build . --target install

      - name: Test
        run: ctest --output-on-failure

      - name: Verify
        run: |
          $locationOfSamples = gci -Path . -Filter ciTokenizerExample.exe -Recurse -ErrorAction SilentlyContinue -Force
          cd $locationOfSamples.DirectoryName
          $files = gci *.exe
          foreach ($file in $files) { (echo "Hello World!*" | cmd /c $file or echo -n ) }

  nix-builds:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        os: [macos-latest, ubuntu-20.04]

    steps:
      - uses: actions/checkout@v4

      - name: Configure
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -Dchem_build_all=ON -Dutils_enable_networking=ON -Dutils_install_applications=ON

      - name: Build
        run: cmake --build .

      - name: Install
        run: sudo cmake --build . --target install

      - name: Test
        run: ctest --output-on-failure

      - name: Verify
        run: |
          cd bin/samples
          for file in *; do printf 'Hello, World!\n*' | ./$file || echo -n; done
